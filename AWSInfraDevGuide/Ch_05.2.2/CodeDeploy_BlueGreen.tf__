resource "aws_codedeploy_app" "Codedeploy_App" {
  name             = "IB07441-Exercise"
  compute_platform = "Server"
}

resource "aws_codedeploy_deployment_config" "Codedeploy_Deployment_Config" {
  deployment_config_name = "IB07441-Codedeploy-Deployment-Config-BlueGreen"

  minimum_healthy_hosts {
    type  = "HOST_COUNT"
    value = 1
  }
}

resource "aws_codedeploy_deployment_group" "Codedeploy_Deployment_Group" {
  app_name              = aws_codedeploy_app.Codedeploy_App.name

  deployment_group_name = "IB07441-Codedeploy-Deployment-Group-BlueGreen"

  service_role_arn      = aws_iam_role.IamRole_CodeDeployTrustRole.arn

  deployment_config_name = aws_codedeploy_deployment_config.Codedeploy_Deployment_Config.id

  deployment_style {
    deployment_option = "WITH_TRAFFIC_CONTROL"
    deployment_type   = "BLUE_GREEN"
  }
  
  blue_green_deployment_config {
    deployment_ready_option {
      action_on_timeout    = "STOP_DEPLOYMENT"
      wait_time_in_minutes = 60
    }

    green_fleet_provisioning_option {
      action = "DISCOVER_EXISTING"
    }

    terminate_blue_instances_on_deployment_success {
      action = "TERMINATE"
      termination_wait_time_in_minutes = 1
    }
  }

  autoscaling_groups = [aws_autoscaling_group.AutoscalingGroup_Green.name]

  load_balancer_info {
    target_group_info {
      name = aws_lb_target_group.Lb_TargetGroup.name
    }
  }
}
